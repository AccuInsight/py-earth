

.. _sphx_glr_auto_examples_plot_derivatives.py:


============================================
Plotting derivatives of simple sine function
============================================

A simple example plotting a fit of the sine function and
the derivatives computed by Earth.



.. image:: /auto_examples/images/sphx_glr_plot_derivatives_001.png
    :align: center


.. rst-class:: sphx-glr-script-out

 Out::

      Forward Pass
    -----------------------------------------------------------------
    iter  parent  var  knot  mse        terms  gcv     rsq    grsq   
    -----------------------------------------------------------------
    0     -       -    -     47.918854  1      47.928  0.000  0.000  
    1     0       6    7511  44.378017  3      44.458  0.074  0.072  
    2     1       6    4611  35.601672  5      35.723  0.257  0.255  
    3     2       6    7723  21.066447  7      21.172  0.560  0.558  
    4     0       6    2911  11.242578  9      11.317  0.765  0.764  
    5     7       6    1411  4.966547   11     5.008   0.896  0.896  
    6     0       6    5618  1.414334   13     1.428   0.970  0.970  
    7     0       6    4118  0.976659   15     0.988   0.980  0.979  
    8     1       6    6218  0.747674   17     0.757   0.984  0.984  
    9     2       6    8630  0.341531   19     0.347   0.993  0.993  
    10    13      6    2511  0.243778   21     0.248   0.995  0.995  
    11    11      6    1011  0.191405   23     0.195   0.996  0.996  
    12    13      6    3318  0.171912   25     0.175   0.996  0.996  
    -----------------------------------------------------------------
    Stopping Condition 2: Improvement below threshold

    Pruning Pass
    ----------------------------------------------
    iter  bf  terms  mse    gcv     rsq    grsq   
    ----------------------------------------------
    0     -   25     0.17   0.175   0.996  0.996  
    1     20  24     0.17   0.175   0.996  0.996  
    2     12  23     0.17   0.175   0.996  0.996  
    3     18  22     0.17   0.175   0.996  0.996  
    4     14  21     0.17   0.175   0.996  0.996  
    5     2   20     0.17   0.175   0.996  0.996  
    6     16  19     0.17   0.174   0.996  0.996  
    7     21  18     0.17   0.175   0.996  0.996  
    8     5   17     0.17   0.175   0.996  0.996  
    9     23  16     0.18   0.178   0.996  0.996  
    10    10  15     0.20   0.201   0.996  0.996  
    11    22  14     0.24   0.239   0.995  0.995  
    12    24  13     0.28   0.282   0.994  0.994  
    13    11  12     0.70   0.701   0.985  0.985  
    14    17  11     1.13   1.137   0.976  0.976  
    15    19  10     1.69   1.698   0.965  0.965  
    16    4   9      2.21   2.221   0.954  0.954  
    17    3   8      2.38   2.399   0.950  0.950  
    18    6   7      14.40  14.469  0.700  0.698  
    19    8   6      23.03  23.128  0.519  0.517  
    20    1   5      27.73  27.823  0.421  0.419  
    21    15  4      36.71  36.803  0.234  0.232  
    22    9   3      42.46  42.538  0.114  0.112  
    23    13  2      45.14  45.181  0.058  0.057  
    24    7   1      47.92  47.928  0.000  0.000  
    ----------------------------------------------
    Selected iteration: 6

    Earth Model
    --------------------------------------------------------------------------------------------------
    Basis Function                                                               Pruned  Coefficient  
    --------------------------------------------------------------------------------------------------
    (Intercept)                                                                  No      147.688      
    C(x6|s=+1,-5.29049,-5.08316,-3.81365)                                        No      -31.3083     
    C(x6|s=-1,-5.29049,-5.08316,-3.81365)                                        Yes     None         
    C(x6|s=+1,-0.315974,0.653401,1.17646)*C(x6|s=+1,-5.29049,-5.08316,-3.81365)  No      -4.604       
    C(x6|s=-1,-0.315974,0.653401,1.17646)*C(x6|s=+1,-5.29049,-5.08316,-3.81365)  No      3.02266      
    C(x6|s=+1,-6.3914,-5.49781,-5.29049)*C(x6|s=-1,-5.29049,-5.08316,-3.81365)   No      -3.27762     
    C(x6|s=-1,-6.3914,-5.49781,-5.29049)*C(x6|s=-1,-5.29049,-5.08316,-3.81365)   No      3.1787       
    C(x6|s=+1,3.75798,4.21422,4.62577)                                           No      14.6399      
    C(x6|s=-1,3.75798,4.21422,4.62577)                                           No      -14.834      
    C(x6|s=+1,6.13852,7.23971,7.61111)*C(x6|s=+1,3.75798,4.21422,4.62577)        No      -5.60341     
    C(x6|s=-1,6.13852,7.23971,7.61111)*C(x6|s=+1,3.75798,4.21422,4.62577)        No      3.56954      
    C(x6|s=+1,-1.91474,-1.28535,-0.315974)                                       No      12.2845      
    C(x6|s=-1,-1.91474,-1.28535,-0.315974)                                       Yes     None         
    C(x6|s=+1,1.17646,1.69952,2.50062)                                           No      -11.5728     
    C(x6|s=-1,1.17646,1.69952,2.50062)                                           Yes     None         
    C(x6|s=+1,-3.81365,-2.54413,-1.91474)*C(x6|s=+1,-5.29049,-5.08316,-3.81365)  No      4.10527      
    C(x6|s=-1,-3.81365,-2.54413,-1.91474)*C(x6|s=+1,-5.29049,-5.08316,-3.81365)  Yes     None         
    C(x6|s=+1,-8.64229,-7.28499,-6.3914)*C(x6|s=-1,-5.29049,-5.08316,-3.81365)   No      4.14465      
    C(x6|s=-1,-8.64229,-7.28499,-6.3914)*C(x6|s=-1,-5.29049,-5.08316,-3.81365)   Yes     None         
    C(x6|s=+1,4.62577,5.03733,6.13852)*C(x6|s=+1,1.17646,1.69952,2.50062)        No      3.9774       
    C(x6|s=-1,4.62577,5.03733,6.13852)*C(x6|s=+1,1.17646,1.69952,2.50062)        Yes     None         
    C(x6|s=+1,7.61111,7.98251,8.99069)*C(x6|s=+1,-1.91474,-1.28535,-0.315974)    No      0.0397711    
    C(x6|s=-1,7.61111,7.98251,8.99069)*C(x6|s=+1,-1.91474,-1.28535,-0.315974)    No      -0.483734    
    C(x6|s=+1,2.50062,3.30173,3.75798)*C(x6|s=+1,1.17646,1.69952,2.50062)        No      -0.214956    
    C(x6|s=-1,2.50062,3.30173,3.75798)*C(x6|s=+1,1.17646,1.69952,2.50062)        No      2.10639      
    --------------------------------------------------------------------------------------------------
    MSE: 0.1242, GCV: 0.1261, RSQ: 0.9974, GRSQ: 0.9974




|


.. code-block:: python

    import numpy
    import matplotlib.pyplot as plt

    from pyearth import Earth

    # Create some fake data
    numpy.random.seed(2)
    m = 10000
    n = 10
    X = 20 * numpy.random.uniform(size=(m, n)) - 10
    y = 10*numpy.sin(X[:, 6]) + 0.25*numpy.random.normal(size=m)

    # Compute the known true derivative with respect to the predictive variable
    y_prime = 10*numpy.cos(X[:, 6])

    # Fit an Earth model
    model = Earth(max_degree=2, minspan_alpha=.5, smooth=True)
    model.fit(X, y)

    # Print the model
    print(model.trace())
    print(model.summary())

    # Get the predicted values and derivatives
    y_hat = model.predict(X)
    y_prime_hat = model.predict_deriv(X, 'x6')

    # Plot true and predicted function values and derivatives
    # for the predictive variable
    plt.subplot(211)
    plt.plot(X[:, 6], y, 'r.')
    plt.plot(X[:, 6], y_hat, 'b.')
    plt.ylabel('function')
    plt.subplot(212)
    plt.plot(X[:, 6], y_prime, 'r.')
    plt.plot(X[:, 6], y_prime_hat[:, 0], 'b.')
    plt.ylabel('derivative')
    plt.show()

**Total running time of the script:**
(0 minutes 5.237 seconds)



.. container:: sphx-glr-download

    **Download Python source code:** :download:`plot_derivatives.py <plot_derivatives.py>`


.. container:: sphx-glr-download

    **Download IPython notebook:** :download:`plot_derivatives.ipynb <plot_derivatives.ipynb>`
